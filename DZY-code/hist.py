import pyecharts.options as opts
from pyecharts.charts import Line
x = []
for i in range(40):
    x.append(i)
y1=[0.897810219,1,0.711678832,0.846715328,0.879562044,0.95620438,0.919708029,0.99270073,0.996350365,0.996350365,0.828467153,0.901459854,0.886861314,0.945255474,0.948905109,0.981751825,0.99270073,1,0.879562044,0.905109489,0.905109489,0.923357664,0.905109489,0.967153285,0.897810219,1,0.875912409,0.897810219,0.894160584,0.919708029,0.927007299,0.99270073,1,1,0.875912409,0.897810219,0.886861314,0.923357664,0.927007299,0.981751825]
y2=[0.948905109,1,1,0.948905109,1,1,0.894160584,0.974452555,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
y3=[0.240875912,0.116788321,0.160583942,0.156934307,0.273722628,0.113138686,0.200729927,0.284671533,0.135036496,0.270072993,0.361313869,0.204379562,0.733576642,0.916058394,0.631386861,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
y4=[0.897810219,0.927007299,0.97810219,0.989051095,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
line=(
    Line()
    .add_xaxis(xaxis_data=x)
    .add_yaxis(series_name="IsolationForest算法",y_axis=y1, is_smooth=True)
    .add_yaxis(series_name="DBSCAN算法",y_axis=y2, is_smooth=True)
    .add_yaxis(series_name="LocalOutlierFactor算法",y_axis=y3, is_smooth=True)
    .add_yaxis(series_name="OneClassSVM算法",y_axis=y4, is_smooth=True)
    .set_global_opts(title_opts=opts.TitleOpts(title="算法--准确率"))
)
line.render_notebook()
line.render('284807样本数据集数据集对比.html')